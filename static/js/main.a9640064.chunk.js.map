{"version":3,"sources":["components/GlobalState/GlobalState.tsx","components/Header/Header.tsx","components/UserList/UserList.tsx","components/PostsList/PostsList.tsx","components/PostDetails/PostDetails.tsx","components/EditPost/EditPost.tsx","App.tsx","index.tsx"],"names":["GlobalStateContext","createContext","GlobalState","children","useState","selectUser","setSelectUser","selectPost","setSelectPost","useEffect","localStorage","getItem","JSON","parse","Provider","value","Header","useContext","className","to","id","name","email","onClick","removeItem","UserList","usersList","setUsersList","history","useHistory","axios","get","then","response","data","map","item","index","user","setItem","stringify","push","PostsList","postsList","setPostsList","post","userId","title","body","PostDetails","comments","setComments","type","comment","postId","EditPost","setTitle","setBody","onSubmit","e","preventDefault","updatePost","put","console","log","htmlFor","onChange","target","placeholder","style","minHeight","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9640064.chunk.js","sourcesContent":["import React, {createContext, useEffect, useState} from 'react';\r\nimport {userType} from \"../UserList/UserList\";\r\nimport {postType} from \"../PostsList/PostsList\";\r\n\r\n// @ts-ignore\r\nexport const GlobalStateContext = createContext();\r\n\r\nexport const GlobalState: React.FC = ({children}) => {\r\n\r\n    const [selectUser, setSelectUser] = useState<userType | null>(null)\r\n    const [selectPost, setSelectPost] = useState<postType | null>(null)\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"user\")) {\r\n            // @ts-ignore\r\n            setSelectUser(JSON.parse(localStorage.getItem(\"user\")))\r\n        }\r\n\r\n        if (localStorage.getItem(\"post\")) {\r\n            // @ts-ignore\r\n            setSelectPost(JSON.parse(localStorage.getItem(\"post\")))\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <GlobalStateContext.Provider value={{selectUser, setSelectUser, selectPost, setSelectPost}}>\r\n            {children}\r\n        </GlobalStateContext.Provider>\r\n    )\r\n}","import React, {useContext} from \"react\";\r\nimport './header.scss';\r\nimport {NavLink} from 'react-router-dom'\r\nimport {GlobalStateContext} from \"../GlobalState/GlobalState\";\r\n\r\nexport const Header: React.FC = () => {\r\n\r\n    // @ts-ignore\r\n    const {selectUser, setSelectUser, setSelectPost} = useContext(GlobalStateContext);\r\n\r\n    return (\r\n        <div className='header'>\r\n\r\n            <div className='container-fluid'>\r\n                <div className='row'>\r\n                    <div className='col-12 d-md-flex align-items-center'>\r\n                        <div className='col-md-3'>\r\n                            <h3 className='headerTitle'>Author: Igor Shyian</h3>\r\n                        </div>\r\n                        <div className='col-md-4 d-flex'>\r\n                            {selectUser && <NavLink className='customLink' to='postsList'>moja lista post√≥w</NavLink>}\r\n                            <NavLink className='customLink' to='userList'>Zmien uzytkownikow</NavLink>\r\n                        </div>\r\n                        <div className='col-md-5 d-md-flex align-items-center'>\r\n                            {selectUser &&\r\n                            <div className='userData'>\r\n                                <div className='item'>Id: {selectUser.id}</div>\r\n                                <div className='item'>Name: {selectUser.name}</div>\r\n                                <div className='item'>E-mail: {selectUser.email}</div>\r\n                            </div>}\r\n\r\n                            {selectUser && <button className='clearButton' onClick={() => {\r\n                                setSelectUser(null)\r\n                                setSelectPost(null)\r\n                                localStorage.removeItem(\"user\")\r\n                                localStorage.removeItem(\"post\")\r\n                            }}>Clear User</button>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState, useContext} from \"react\"\r\nimport axios from \"axios\"\r\nimport './userList.scss'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport {GlobalStateContext} from \"../GlobalState/GlobalState\";\r\n\r\nexport type userType = {\r\n    id: number\r\n    name: string\r\n    username: string\r\n    email: string\r\n    address: {\r\n        street: string\r\n        suite: string\r\n        city: string\r\n        zipcode: string\r\n        geo: {\r\n            lat: string\r\n            lng: string\r\n        }\r\n    },\r\n    phone: string\r\n    website: string\r\n    company: {\r\n        name: string\r\n        catchPhrase: string\r\n        bs: string\r\n    }\r\n}\r\n\r\nexport const UserList: React.FC = () => {\r\n\r\n    const [usersList, setUsersList] = useState<Array<userType>>([])\r\n    const history = useHistory();\r\n    // @ts-ignore\r\n    const {setSelectUser} = useContext(GlobalStateContext);\r\n\r\n    const clickUser = (user: object) => {\r\n        setSelectUser(user)\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n        history.push('/postsList')\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get('https://jsonplaceholder.typicode.com/users')\r\n            .then((response) => {\r\n                setUsersList(response.data)\r\n            })\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className='userList'>\r\n            <div className='container'>\r\n                <div className='row'>\r\n                    <div className='col-12 text-white text-center'>\r\n                        <h1 className='userListTitle'>User List</h1>\r\n                    </div>\r\n\r\n                    <div className='col-12 text-white'>\r\n                        {usersList.map((item, index) => (\r\n                            <div key={item.id + index}\r\n                                 onClick={() => {clickUser(item)}}\r\n                                 className='col-12 itemUser d-md-flex'>\r\n                                <div className='col-md-2'>Id: {item.id}</div>\r\n                                <div className='col-md-5'>Name: {item.name}</div>\r\n                                <div className='col-md-5'>E-mail: {item.email}</div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState, useContext} from \"react\";\r\nimport axios from \"axios\";\r\nimport './postList.scss'\r\nimport {Redirect, useHistory} from \"react-router-dom\";\r\nimport {GlobalStateContext} from \"../GlobalState/GlobalState\";\r\n\r\nexport type postType = {\r\n    id: number\r\n    userId: number\r\n    title: string\r\n    body: string\r\n}\r\n\r\nexport const PostsList: React.FC = () => {\r\n\r\n    const [postsList, setPostsList] = useState<Array<postType>>([])\r\n    const history = useHistory();\r\n    // @ts-ignore\r\n    const {selectUser, setSelectPost} = useContext(GlobalStateContext);\r\n\r\n    useEffect(() => {\r\n        if (selectUser) {\r\n            axios.get(`https://jsonplaceholder.typicode.com/posts?userId=${selectUser.id}`)\r\n                .then((response) => {\r\n                    setPostsList(response.data)\r\n                })\r\n        } else if (localStorage.getItem(\"user\")) {\r\n            // @ts-ignore\r\n            axios.get(`https://jsonplaceholder.typicode.com/posts?userId=${JSON.parse(localStorage.getItem(\"user\")).id}`)\r\n                .then((response) => {\r\n                    setPostsList(response.data)\r\n                })\r\n        }\r\n    }, [])\r\n\r\n    const postClick = (post: any) => {\r\n        setSelectPost(post)\r\n        localStorage.setItem('post', JSON.stringify(post));\r\n        history.push('/postDetails')\r\n    }\r\n\r\n    if (!localStorage.getItem(\"user\")) {\r\n        return <Redirect to=\"/userList\"/>\r\n    }\r\n\r\n    return (\r\n        <div className='postList'>\r\n            <div className='container'>\r\n                <div className='row'>\r\n                    <div className='col-12 text-white text-center'>\r\n                        <h1 className='userListTitle'>Posts List</h1>\r\n                    </div>\r\n\r\n                    <div className='col-12 text-white'>\r\n                        {postsList.map((item, index) => (\r\n                            <div key={item.id + index}\r\n                                 onClick={() => {postClick(item)}}\r\n                                 className='itemPost'>\r\n                                <div>Id: {item.id}</div>\r\n                                <div>User id: {item.userId}</div>\r\n                                <div>Title: {item.title}</div>\r\n                                <div>Content: {item.body}</div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState, useContext} from \"react\";\r\nimport axios from \"axios\";\r\nimport './postDetails.scss'\r\nimport {Redirect, useHistory} from \"react-router-dom\";\r\nimport {GlobalStateContext} from \"../GlobalState/GlobalState\";\r\n\r\ntype commentsType = {\r\n    id: number\r\n    postId: number\r\n    name: string\r\n    email: string\r\n    body: string\r\n}\r\n\r\nexport const PostDetails: React.FC = () => {\r\n\r\n    const [comments, setComments] = useState<Array<commentsType>>([])\r\n    const history = useHistory();\r\n    // @ts-ignore\r\n    const {selectPost} = useContext(GlobalStateContext);\r\n\r\n    useEffect(() => {\r\n        if (selectPost) {\r\n            axios.get(`https://jsonplaceholder.typicode.com/posts/${selectPost.id}/comments`)\r\n                .then((response) => {\r\n                    setComments(response.data)\r\n                })\r\n        } else if (localStorage.getItem(\"post\")) {\r\n            // @ts-ignore\r\n            axios.get(`https://jsonplaceholder.typicode.com/posts/${JSON.parse(localStorage.getItem(\"post\")).id}/comments`)\r\n                .then((response) => {\r\n                    setComments(response.data)\r\n                })\r\n        }\r\n    }, [])\r\n\r\n    if (!localStorage.getItem(\"post\")) {\r\n        return <Redirect to=\"/postsList\"/>\r\n    }\r\n\r\n    return (\r\n        <div className='postDetails'>\r\n            <div className='container'>\r\n                <div className='row'>\r\n                    <div className='col-12 text-white text-center'>\r\n                        <h1 className='userListTitle'>Post Details</h1>\r\n                    </div>\r\n\r\n                    <div className='col-12 text-white'>\r\n                        <div className='itemPost'>\r\n                            {selectPost &&\r\n                            <div>\r\n                                <div>Id: {selectPost.id}</div>\r\n                                <div>User id: {selectPost.userId}</div>\r\n                                <div>Title: {selectPost.title}</div>\r\n                                <div>Content: {selectPost.body}</div>\r\n                            </div>}\r\n\r\n                            <div>\r\n                                <button type=\"button\" onClick={() => {history.push('/editPost')}} className=\"mt-3 btn btn-success\">Edit Post</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-12 text-white text-center'>\r\n                        <h1 className='userListTitle'>Post Comments</h1>\r\n                    </div>\r\n\r\n                    {comments.map((comment, index) => (\r\n                        <div key={comment.id + index} className='col-12 text-white'>\r\n                            <div className='itemPost'>\r\n                                <div>Id: {comment.id}</div>\r\n                                <div>Post id: {comment.postId}</div>\r\n                                <div>Name: {comment.name}</div>\r\n                                <div>E-mail: {comment.email}</div>\r\n                                <div>Content: {comment.body}</div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useContext, useEffect, useState} from \"react\";\r\nimport {Redirect, useHistory} from \"react-router-dom\";\r\nimport {GlobalStateContext} from \"../GlobalState/GlobalState\";\r\nimport axios from \"axios\";\r\n\r\nexport const EditPost: React.FC = () => {\r\n\r\n    // @ts-ignore\r\n    const {selectPost} = useContext(GlobalStateContext);\r\n    const [title, setTitle] = useState('')\r\n    const [body, setBody] = useState('')\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"post\")) {\r\n            // @ts-ignore\r\n            setTitle(JSON.parse(localStorage.getItem(\"post\")).title)\r\n            // @ts-ignore\r\n            setBody(JSON.parse(localStorage.getItem(\"post\")).body)\r\n        }\r\n    }, [])\r\n\r\n    const onSubmit = (e: any) => {\r\n        e.preventDefault()\r\n\r\n        const updatePost = {\r\n            title,\r\n            body\r\n        }\r\n\r\n        axios.put(`https://jsonplaceholder.typicode.com/posts/${selectPost.id}`, updatePost)\r\n            .then((response) => {\r\n                console.log(response.data)\r\n                history.push('/postsList')\r\n            })\r\n    }\r\n\r\n    if (!localStorage.getItem(\"post\")) {\r\n        return <Redirect to=\"/postsList\"/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className='container'>\r\n                <div className='row text-white d-flex justify-content-center'>\r\n                    <div className='col-12 text-center p-4'>\r\n                        <h1>Edit Post</h1>\r\n                    </div>\r\n                    <div className='col-8'>\r\n                        <form onSubmit={onSubmit}>\r\n                            <div className=\"mb-3\">\r\n                                <label htmlFor=\"title\" className=\"form-label\">Title:</label>\r\n                                <input type=\"text\" className=\"form-control\"\r\n                                       value={title}\r\n                                       onChange={(e) => setTitle(e.target.value)}\r\n                                       id=\"title\"\r\n                                       placeholder='Title'/>\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <label htmlFor=\"content\" className=\"form-label\">Content: </label>\r\n                                <textarea\r\n                                    style={{minHeight: '150px'}}\r\n                                    className=\"form-control\"\r\n                                    value={body}\r\n                                    onChange={(e) => setBody(e.target.value)}\r\n                                    id=\"content\"\r\n                                    placeholder='Content'/>\r\n                            </div>\r\n                            <button type=\"submit\" className=\"btn btn-success\">Edit</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport {HashRouter, Redirect, Route, Switch} from 'react-router-dom';\nimport {Header} from \"./components/Header/Header\";\nimport {UserList} from './components/UserList/UserList';\nimport './app.scss'\nimport {PostsList} from './components/PostsList/PostsList';\nimport {PostDetails} from \"./components/PostDetails/PostDetails\";\nimport {GlobalState} from \"./components/GlobalState/GlobalState\";\nimport {EditPost} from \"./components/EditPost/EditPost\";\n\nfunction App() {\n\n    return (\n        <div>\n            <GlobalState>\n                <HashRouter>\n                    <Header/>\n                    <Switch>\n                        <Route exact path='/userList'\n                               component={UserList}/>\n                        <Route exact path='/postsList'\n                               component={PostsList}/>\n                        <Route exact path='/postDetails'\n                               component={PostDetails}/>\n                        <Route exact path='/editPost'\n                               component={EditPost}/>\n                        <Redirect to={\"/userList\"}/>\n                    </Switch>\n                </HashRouter>\n            </GlobalState>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}